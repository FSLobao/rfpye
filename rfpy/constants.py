# AUTOGENERATED! DO NOT EDIT! File to edit: 04_constants.ipynb (unless otherwise specified).

__all__ = ['BASEBLOCK', 'EXCLUDE_ATTRS', 'DICT_PROCESSING', 'DICT_UNIT', 'TUNING_BLOCK', 'BYTES_TIMED', 'BYTES_21',
           'BYTES_63', 'BYTES_64', 'BYTES_65']

# Cell
from typing import Mapping

BASEBLOCK = ['thread_id', 'size', 'type', 'data']

EXCLUDE_ATTRS = ['count', 'index', 'default', 'date', 'time', 'nanosecs',
                 'data', 'block_data', 'frequencies']

DICT_PROCESSING: Mapping[int, str] = {0: 'single measurement', 1: 'average', 2: 'peak', 3: 'minimum'}

DICT_UNIT: Mapping[int, str] = {0: '%', 1: 'dBm', 2: 'dBuV/m'}

TUNING_BLOCK: Mapping[int, str] = {0: 'completed without error', 1: 'error occurred', 2: 'radio produced an error',
                                   3: 'GPRS transmission occured during capture', 4: 'ADC overflowed during capture'}


BYTES_TIMED = { 0:  slice(0,4),
                1:  slice(4,8),
                2:  slice(8,12),
                3:  slice(12,14),
                4:  slice(14,18),
                5:  slice(18,20),
                6:  slice(20,24),
                7:  slice(24,26),
                8:  slice(26,28)}

BYTES_21 = {0: slice(0,16),
            1: slice(16,20)}

BYTES_63 = BYTES_TIMED.copy()

BYTES_63.update({   9:  slice(28,32),
                    10: slice(32,36),
                    11: slice(36,37),
                    12: slice(37,38),
                    13: slice(38,39),
                    14: slice(39,40),
                    15: slice(40,41),
                    16: slice(41,42),
                    17: slice(42,43),
                    18: slice(43,45),
                    19: slice(45,47),
                    20: slice(47,48),
                    21: slice(48,52)})

BYTES_64 = BYTES_63.copy()

BYTES_64.update({22: slice(52,56), 23: slice(56,60)})

BYTES_65 = BYTES_63.copy()

BYTES_65.update({10: slice(32,33),
                 11: slice(33,34),
                 12: slice(34,36),
                 13: slice(36,37),
                 14: slice(37,38),
                 15: slice(38,39),
                 16: slice(39,40),
                 17: slice(40,42),
                 18: slice(42,44),
                 19: slice(44,48)})

_ = BYTES_65.pop(20, None), BYTES_65.pop(21, None)